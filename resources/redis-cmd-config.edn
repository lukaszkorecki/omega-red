{:exists {:cmd :exists
          :summary "Determines whether one or more keys exist."
          :all-args ("key")
          :arity -2
          :is-single-key-arg? false
          :key-search {:start-idx 1
                       :last-key-idx -1
                       :step 1
                       :limit 0}}
 :del {:cmd :del
       :summary "Deletes one or more keys."
       :all-args ("key")
       :arity -2
       :is-single-key-arg? false
       :key-search {:start-idx 1
                    :last-key-idx -1
                    :step 1
                    :limit 0}}
 :lmpop {:cmd :lmpop
         :summary "Returns multiple elements from a list after removing them. Deletes the list if the last element was popped."
         :all-args ("numkeys" "key" "where" "count")
         :arity -4
         :is-single-key-arg? false
         :key-search {:start-idx 1
                      :last-key-idx nil
                      :step 1
                      :limit nil}}
 :bitfield_ro {:cmd :bitfield_ro
               :summary "Performs arbitrary read-only bitfield integer operations on strings."
               :all-args ("key" "get-block")
               :arity -2
               :is-single-key-arg? true
               :key-search {:start-idx 1
                            :last-key-idx 0
                            :step 1
                            :limit 0}}
 :fcall_ro {:cmd :fcall_ro
            :summary "Invokes a read-only function."
            :all-args ("function" "numkeys" "key" "arg")
            :arity -3
            :is-single-key-arg? false
            :key-search {:start-idx 2
                         :last-key-idx nil
                         :step 1
                         :limit nil}}
 :zscan {:cmd :zscan
         :summary "Iterates over members and scores of a sorted set."
         :all-args ("key" "cursor" "pattern" "count")
         :arity -3
         :is-single-key-arg? true
         :key-search {:start-idx 1
                      :last-key-idx 0
                      :step 1
                      :limit 0}}
 :zremrangebyrank {:cmd :zremrangebyrank
                   :summary "Removes members in a sorted set within a range of indexes. Deletes the sorted set if all members were removed."
                   :all-args ("key" "start" "stop")
                   :arity 4
                   :is-single-key-arg? true
                   :key-search {:start-idx 1
                                :last-key-idx 0
                                :step 1
                                :limit 0}}
 :sunsubscribe {:cmd :sunsubscribe
                :summary "Stops listening to messages posted to shard channels."
                :all-args ("shardchannel")
                :arity -1
                :is-single-key-arg? false
                :key-search {:start-idx 1
                             :last-key-idx -1
                             :step 1
                             :limit 0}}
 :lpushx {:cmd :lpushx
          :summary "Prepends one or more elements to a list only when the list exists."
          :all-args ("key" "element")
          :arity -3
          :is-single-key-arg? true
          :key-search {:start-idx 1
                       :last-key-idx 0
                       :step 1
                       :limit 0}}
 :georadius_ro {:cmd :georadius_ro
                :summary "Returns members from a geospatial index that are within a distance from a coordinate."
                :all-args ("key" "longitude" "latitude" "radius" "unit" "withcoord" "withdist" "withhash" "count-block" "order")
                :arity -6
                :is-single-key-arg? true
                :key-search {:start-idx 1
                             :last-key-idx 0
                             :step 1
                             :limit 0}}
 :mget {:cmd :mget
        :summary "Atomically returns the string values of one or more keys."
        :all-args ("key")
        :arity -2
        :is-single-key-arg? false
        :key-search {:start-idx 1
                     :last-key-idx -1
                     :step 1
                     :limit 0}}
 :bitcount {:cmd :bitcount
            :summary "Counts the number of set bits (population counting) in a string."
            :all-args ("key" "range")
            :arity -2
            :is-single-key-arg? true
            :key-search {:start-idx 1
                         :last-key-idx 0
                         :step 1
                         :limit 0}}
 :geoadd {:cmd :geoadd
          :summary "Adds one or more members to a geospatial index. The key is created if it doesn't exist."
          :all-args ("key" "condition" "change" "data")
          :arity -5
          :is-single-key-arg? true
          :key-search {:start-idx 1
                       :last-key-idx 0
                       :step 1
                       :limit 0}}
 :geopos {:cmd :geopos
          :summary "Returns the longitude and latitude of members from a geospatial index."
          :all-args ("key" "member")
          :arity -2
          :is-single-key-arg? true
          :key-search {:start-idx 1
                       :last-key-idx 0
                       :step 1
                       :limit 0}}
 :getex {:cmd :getex
         :summary "Returns the string value of a key after setting its expiration time."
         :all-args ("key" "expiration")
         :arity -2
         :is-single-key-arg? true
         :key-search {:start-idx 1
                      :last-key-idx 0
                      :step 1
                      :limit 0}}
 :zunionstore {:cmd :zunionstore
               :summary "Stores the union of multiple sorted sets in a key."
               :all-args ("destination" "numkeys" "key" "weight" "aggregate")
               :arity -4
               :is-single-key-arg? true
               :key-search {:start-idx 1
                            :last-key-idx 0
                            :step 1
                            :limit 0}}
 :get {:cmd :get
       :summary "Returns the string value of a key."
       :all-args ("key")
       :arity 2
       :is-single-key-arg? true
       :key-search {:start-idx 1
                    :last-key-idx 0
                    :step 1
                    :limit 0}}
 :xgroup-setid {:cmd :xgroup-setid
                :summary "Sets the last-delivered ID of a consumer group."
                :all-args ("key" "group" "id-selector" "entriesread")
                :arity -5
                :is-single-key-arg? true
                :key-search {:start-idx 2
                             :last-key-idx 0
                             :step 1
                             :limit 0}}
 :ltrim {:cmd :ltrim
         :summary "Removes elements from both ends a list. Deletes the list if all elements were trimmed."
         :all-args ("key" "start" "stop")
         :arity 4
         :is-single-key-arg? true
         :key-search {:start-idx 1
                      :last-key-idx 0
                      :step 1
                      :limit 0}}
 :xgroup-create {:cmd :xgroup-create
                 :summary "Creates a consumer group."
                 :all-args ("key" "group" "id-selector" "mkstream" "entries-read")
                 :arity -5
                 :is-single-key-arg? true
                 :key-search {:start-idx 2
                              :last-key-idx 0
                              :step 1
                              :limit 0}}
 :copy {:cmd :copy
        :summary "Copies the value of a key to a new key."
        :all-args ("source" "destination" "destination-db" "replace")
        :arity -3
        :is-single-key-arg? true
        :key-search {:start-idx 1
                     :last-key-idx 0
                     :step 1
                     :limit 0}}
 :sunionstore {:cmd :sunionstore
               :summary "Stores the union of multiple sets in a key."
               :all-args ("destination" "key")
               :arity -3
               :is-single-key-arg? true
               :key-search {:start-idx 1
                            :last-key-idx 0
                            :step 1
                            :limit 0}}
 :expireat {:cmd :expireat
            :summary "Sets the expiration time of a key to a Unix timestamp."
            :all-args ("key" "unix-time-seconds" "condition")
            :arity -3
            :is-single-key-arg? true
            :key-search {:start-idx 1
                         :last-key-idx 0
                         :step 1
                         :limit 0}}
 :zdiff {:cmd :zdiff
         :summary "Returns the difference between multiple sorted sets."
         :all-args ("numkeys" "key" "withscores")
         :arity -3
         :is-single-key-arg? false
         :key-search {:start-idx 1
                      :last-key-idx nil
                      :step 1
                      :limit nil}}
 :zrevrank {:cmd :zrevrank
            :summary "Returns the index of a member in a sorted set ordered by descending scores."
            :all-args ("key" "member" "withscore")
            :arity -3
            :is-single-key-arg? true
            :key-search {:start-idx 1
                         :last-key-idx 0
                         :step 1
                         :limit 0}}
 :smismember {:cmd :smismember
              :summary "Determines whether multiple members belong to a set."
              :all-args ("key" "member")
              :arity -3
              :is-single-key-arg? true
              :key-search {:start-idx 1
                           :last-key-idx 0
                           :step 1
                           :limit 0}}
 :strlen {:cmd :strlen
          :summary "Returns the length of a string value."
          :all-args ("key")
          :arity 2
          :is-single-key-arg? true
          :key-search {:start-idx 1
                       :last-key-idx 0
                       :step 1
                       :limit 0}}
 :zpopmin {:cmd :zpopmin
           :summary "Returns the lowest-scoring members from a sorted set after removing them. Deletes the sorted set if the last member was popped."
           :all-args ("key" "count")
           :arity -2
           :is-single-key-arg? true
           :key-search {:start-idx 1
                        :last-key-idx 0
                        :step 1
                        :limit 0}}
 :lrange {:cmd :lrange
          :summary "Returns a range of elements from a list."
          :all-args ("key" "start" "stop")
          :arity 4
          :is-single-key-arg? true
          :key-search {:start-idx 1
                       :last-key-idx 0
                       :step 1
                       :limit 0}}
 :hincrby {:cmd :hincrby
           :summary "Increments the integer value of a field in a hash by a number. Uses 0 as initial value if the field doesn't exist."
           :all-args ("key" "field" "increment")
           :arity 4
           :is-single-key-arg? true
           :key-search {:start-idx 1
                        :last-key-idx 0
                        :step 1
                        :limit 0}}
 :zrank {:cmd :zrank
         :summary "Returns the index of a member in a sorted set ordered by ascending scores."
         :all-args ("key" "member" "withscore")
         :arity -3
         :is-single-key-arg? true
         :key-search {:start-idx 1
                      :last-key-idx 0
                      :step 1
                      :limit 0}}
 :setrange {:cmd :setrange
            :summary "Overwrites a part of a string value with another by an offset. Creates the key if it doesn't exist."
            :all-args ("key" "offset" "value")
            :arity 4
            :is-single-key-arg? true
            :key-search {:start-idx 1
                         :last-key-idx 0
                         :step 1
                         :limit 0}}
 :bzpopmin {:cmd :bzpopmin
            :summary "Removes and returns the member with the lowest score from one or more sorted sets. Blocks until a member is available otherwise. Deletes the sorted set if the last element was popped."
            :all-args ("key" "timeout")
            :arity -3
            :is-single-key-arg? false
            :key-search {:start-idx 1
                         :last-key-idx -2
                         :step 1
                         :limit 0}}
 :sismember {:cmd :sismember
             :summary "Determines whether a member belongs to a set."
             :all-args ("key" "member")
             :arity 3
             :is-single-key-arg? true
             :key-search {:start-idx 1
                          :last-key-idx 0
                          :step 1
                          :limit 0}}
 :sinterstore {:cmd :sinterstore
               :summary "Stores the intersect of multiple sets in a key."
               :all-args ("destination" "key")
               :arity -3
               :is-single-key-arg? true
               :key-search {:start-idx 1
                            :last-key-idx 0
                            :step 1
                            :limit 0}}
 :hset {:cmd :hset
        :summary "Creates or modifies the value of a field in a hash."
        :all-args ("key" "data")
        :arity -4
        :is-single-key-arg? true
        :key-search {:start-idx 1
                     :last-key-idx 0
                     :step 1
                     :limit 0}}
 :expiretime {:cmd :expiretime
              :summary "Returns the expiration time of a key as a Unix timestamp."
              :all-args ("key")
              :arity 2
              :is-single-key-arg? true
              :key-search {:start-idx 1
                           :last-key-idx 0
                           :step 1
                           :limit 0}}
 :pttl {:cmd :pttl
        :summary "Returns the expiration time in milliseconds of a key."
        :all-args ("key")
        :arity 2
        :is-single-key-arg? true
        :key-search {:start-idx 1
                     :last-key-idx 0
                     :step 1
                     :limit 0}}
 :zincrby {:cmd :zincrby
           :summary "Increments the score of a member in a sorted set."
           :all-args ("key" "increment" "member")
           :arity 4
           :is-single-key-arg? true
           :key-search {:start-idx 1
                        :last-key-idx 0
                        :step 1
                        :limit 0}}
 :xdel {:cmd :xdel
        :summary "Returns the number of messages after removing them from a stream."
        :all-args ("key" "id")
        :arity -3
        :is-single-key-arg? true
        :key-search {:start-idx 1
                     :last-key-idx 0
                     :step 1
                     :limit 0}}
 :zcard {:cmd :zcard
         :summary "Returns the number of members in a sorted set."
         :all-args ("key")
         :arity 2
         :is-single-key-arg? true
         :key-search {:start-idx 1
                      :last-key-idx 0
                      :step 1
                      :limit 0}}
 :hvals {:cmd :hvals
         :summary "Returns all values in a hash."
         :all-args ("key")
         :arity 2
         :is-single-key-arg? true
         :key-search {:start-idx 1
                      :last-key-idx 0
                      :step 1
                      :limit 0}}
 :blmove {:cmd :blmove
          :summary "Pops an element from a list
 pushes it to another list and returns it. Blocks until an element is available otherwise. Deletes the list if the last element was moved."
          :all-args ("source" "destination" "wherefrom" "whereto" "timeout")
          :arity 6
          :is-single-key-arg? true
          :key-search {:start-idx 1
                       :last-key-idx 0
                       :step 1
                       :limit 0}}
 :incr {:cmd :incr
        :summary "Increments the integer value of a key by one. Uses 0 as initial value if the key doesn't exist."
        :all-args ("key")
        :arity 2
        :is-single-key-arg? true
        :key-search {:start-idx 1
                     :last-key-idx 0
                     :step 1
                     :limit 0}}
 :linsert {:cmd :linsert
           :summary "Inserts an element before or after another element in a list."
           :all-args ("key" "where" "pivot" "element")
           :arity 5
           :is-single-key-arg? true
           :key-search {:start-idx 1
                        :last-key-idx 0
                        :step 1
                        :limit 0}}
 :zintercard {:cmd :zintercard
              :summary "Returns the number of members of the intersect of multiple sorted sets."
              :all-args ("numkeys" "key" "limit")
              :arity -3
              :is-single-key-arg? false
              :key-search {:start-idx 1
                           :last-key-idx nil
                           :step 1
                           :limit nil}}
 :rpushx {:cmd :rpushx
          :summary "Appends an element to a list only when the list exists."
          :all-args ("key" "element")
          :arity -3
          :is-single-key-arg? true
          :key-search {:start-idx 1
                       :last-key-idx 0
                       :step 1
                       :limit 0}}
 :pfcount {:cmd :pfcount
           :summary "Returns the approximated cardinality of the set(s) observed by the HyperLogLog key(s)."
           :all-args ("key")
           :arity -2
           :is-single-key-arg? false
           :key-search {:start-idx 1
                        :last-key-idx -1
                        :step 1
                        :limit 0}}
 :zrangebylex {:cmd :zrangebylex
               :summary "Returns members in a sorted set within a lexicographical range."
               :all-args ("key" "min" "max" "limit")
               :arity -4
               :is-single-key-arg? true
               :key-search {:start-idx 1
                            :last-key-idx 0
                            :step 1
                            :limit 0}}
 :geohash {:cmd :geohash
           :summary "Returns members from a geospatial index as geohash strings."
           :all-args ("key" "member")
           :arity -2
           :is-single-key-arg? true
           :key-search {:start-idx 1
                        :last-key-idx 0
                        :step 1
                        :limit 0}}
 :xsetid {:cmd :xsetid
          :summary "An internal command for replicating stream values."
          :all-args ("key" "last-id" "entries-added" "max-deleted-id")
          :arity -3
          :is-single-key-arg? true
          :key-search {:start-idx 1
                       :last-key-idx 0
                       :step 1
                       :limit 0}}
 :sadd {:cmd :sadd
        :summary "Adds one or more members to a set. Creates the key if it doesn't exist."
        :all-args ("key" "member")
        :arity -3
        :is-single-key-arg? true
        :key-search {:start-idx 1
                     :last-key-idx 0
                     :step 1
                     :limit 0}}
 :restore {:cmd :restore
           :summary "Creates a key from the serialized representation of a value."
           :all-args ("key" "ttl" "serialized-value" "replace" "absttl" "seconds" "frequency")
           :arity -4
           :is-single-key-arg? true
           :key-search {:start-idx 1
                        :last-key-idx 0
                        :step 1
                        :limit 0}}
 :geodist {:cmd :geodist
           :summary "Returns the distance between two members of a geospatial index."
           :all-args ("key" "member1" "member2" "unit")
           :arity -4
           :is-single-key-arg? true
           :key-search {:start-idx 1
                        :last-key-idx 0
                        :step 1
                        :limit 0}}
 :zadd {:cmd :zadd
        :summary "Adds one or more members to a sorted set
 or updates their scores. Creates the key if it doesn't exist."
        :all-args ("key" "condition" "comparison" "change" "increment" "data")
        :arity -4
        :is-single-key-arg? true
        :key-search {:start-idx 1
                     :last-key-idx 0
                     :step 1
                     :limit 0}}
 :scard {:cmd :scard
         :summary "Returns the number of members in a set."
         :all-args ("key")
         :arity 2
         :is-single-key-arg? true
         :key-search {:start-idx 1
                      :last-key-idx 0
                      :step 1
                      :limit 0}}
 :eval_ro {:cmd :eval_ro
           :summary "Executes a read-only server-side Lua script."
           :all-args ("script" "numkeys" "key" "arg")
           :arity -3
           :is-single-key-arg? false
           :key-search {:start-idx 2
                        :last-key-idx nil
                        :step 1
                        :limit nil}}
 :hscan {:cmd :hscan
         :summary "Iterates over fields and values of a hash."
         :all-args ("key" "cursor" "pattern" "count")
         :arity -3
         :is-single-key-arg? true
         :key-search {:start-idx 1
                      :last-key-idx 0
                      :step 1
                      :limit 0}}
 :zcount {:cmd :zcount
          :summary "Returns the count of members in a sorted set that have scores within a range."
          :all-args ("key" "min" "max")
          :arity 4
          :is-single-key-arg? true
          :key-search {:start-idx 1
                       :last-key-idx 0
                       :step 1
                       :limit 0}}
 :migrate {:cmd :migrate
           :summary "Atomically transfers a key from one Redis instance to another."
           :all-args ("host" "port" "key-selector" "destination-db" "timeout" "copy" "replace" "authentication" "keys")
           :arity -6
           :is-single-key-arg? false
           :key-search {:start-idx 3
                        :last-key-idx 0
                        :step 1
                        :limit 0}}
 :geosearchstore {:cmd :geosearchstore
                  :summary "Queries a geospatial index for members inside an area of a box or a circle
 optionally stores the result."
                  :all-args ("destination" "source" "from" "by" "order" "count-block" "storedist")
                  :arity -8
                  :is-single-key-arg? true
                  :key-search {:start-idx 1
                               :last-key-idx 0
                               :step 1
                               :limit 0}}
 :substr {:cmd :substr
          :summary "Returns a substring from a string value."
          :all-args ("key" "start" "end")
          :arity 4
          :is-single-key-arg? true
          :key-search {:start-idx 1
                       :last-key-idx 0
                       :step 1
                       :limit 0}}
 :sintercard {:cmd :sintercard
              :summary "Returns the number of members of the intersect of multiple sets."
              :all-args ("numkeys" "key" "limit")
              :arity -3
              :is-single-key-arg? false
              :key-search {:start-idx 1
                           :last-key-idx nil
                           :step 1
                           :limit nil}}
 :hget {:cmd :hget
        :summary "Returns the value of a field in a hash."
        :all-args ("key" "field")
        :arity 3
        :is-single-key-arg? true
        :key-search {:start-idx 1
                     :last-key-idx 0
                     :step 1
                     :limit 0}}
 :append {:cmd :append
          :summary "Appends a string to the value of a key. Creates the key if it doesn't exist."
          :all-args ("key" "value")
          :arity 3
          :is-single-key-arg? true
          :key-search {:start-idx 1
                       :last-key-idx 0
                       :step 1
                       :limit 0}}
 :move {:cmd :move
        :summary "Moves a key to another database."
        :all-args ("key" "db")
        :arity 3
        :is-single-key-arg? true
        :key-search {:start-idx 1
                     :last-key-idx 0
                     :step 1
                     :limit 0}}
 :hexists {:cmd :hexists
           :summary "Determines whether a field exists in a hash."
           :all-args ("key" "field")
           :arity 3
           :is-single-key-arg? true
           :key-search {:start-idx 1
                        :last-key-idx 0
                        :step 1
                        :limit 0}}
 :renamenx {:cmd :renamenx
            :summary "Renames a key only when the target key name doesn't exist."
            :all-args ("key" "newkey")
            :arity 3
            :is-single-key-arg? true
            :key-search {:start-idx 1
                         :last-key-idx 0
                         :step 1
                         :limit 0}}
 :lpos {:cmd :lpos
        :summary "Returns the index of matching elements in a list."
        :all-args ("key" "element" "rank" "num-matches" "len")
        :arity -3
        :is-single-key-arg? true
        :key-search {:start-idx 1
                     :last-key-idx 0
                     :step 1
                     :limit 0}}
 :hmget {:cmd :hmget
         :summary "Returns the values of all fields in a hash."
         :all-args ("key" "field")
         :arity -3
         :is-single-key-arg? true
         :key-search {:start-idx 1
                      :last-key-idx 0
                      :step 1
                      :limit 0}}
 :lset {:cmd :lset
        :summary "Sets the value of an element in a list by its index."
        :all-args ("key" "index" "element")
        :arity 4
        :is-single-key-arg? true
        :key-search {:start-idx 1
                     :last-key-idx 0
                     :step 1
                     :limit 0}}
 :xinfo-consumers {:cmd :xinfo-consumers
                   :summary "Returns a list of the consumers in a consumer group."
                   :all-args ("key" "group")
                   :arity 4
                   :is-single-key-arg? true
                   :key-search {:start-idx 2
                                :last-key-idx 0
                                :step 1
                                :limit 0}}
 :lindex {:cmd :lindex
          :summary "Returns an element from a list by its index."
          :all-args ("key" "index")
          :arity 3
          :is-single-key-arg? true
          :key-search {:start-idx 1
                       :last-key-idx 0
                       :step 1
                       :limit 0}}
 :persist {:cmd :persist
           :summary "Removes the expiration time of a key."
           :all-args ("key")
           :arity 2
           :is-single-key-arg? true
           :key-search {:start-idx 1
                        :last-key-idx 0
                        :step 1
                        :limit 0}}
 :getset {:cmd :getset
          :summary "Returns the previous string value of a key after setting it to a new value."
          :all-args ("key" "value")
          :arity 3
          :is-single-key-arg? true
          :key-search {:start-idx 1
                       :last-key-idx 0
                       :step 1
                       :limit 0}}
 :zrem {:cmd :zrem
        :summary "Removes one or more members from a sorted set. Deletes the sorted set if all members were removed."
        :all-args ("key" "member")
        :arity -3
        :is-single-key-arg? true
        :key-search {:start-idx 1
                     :last-key-idx 0
                     :step 1
                     :limit 0}}
 :type {:cmd :type
        :summary "Determines the type of value stored at a key."
        :all-args ("key")
        :arity 2
        :is-single-key-arg? true
        :key-search {:start-idx 1
                     :last-key-idx 0
                     :step 1
                     :limit 0}}
 :xautoclaim {:cmd :xautoclaim
              :summary "Changes
 or acquires
 ownership of messages in a consumer group
 as if the messages were delivered to as consumer group member."
              :all-args ("key" "group" "consumer" "min-idle-time" "start" "count" "justid")
              :arity -6
              :is-single-key-arg? true
              :key-search {:start-idx 1
                           :last-key-idx 0
                           :step 1
                           :limit 0}}
 :object-idletime {:cmd :object-idletime
                   :summary "Returns the time since the last access to a Redis object."
                   :all-args ("key")
                   :arity 3
                   :is-single-key-arg? true
                   :key-search {:start-idx 2
                                :last-key-idx 0
                                :step 1
                                :limit 0}}
 :setnx {:cmd :setnx
         :summary "Set the string value of a key only when the key doesn't exist."
         :all-args ("key" "value")
         :arity 3
         :is-single-key-arg? true
         :key-search {:start-idx 1
                      :last-key-idx 0
                      :step 1
                      :limit 0}}
 :xgroup-createconsumer {:cmd :xgroup-createconsumer
                         :summary "Creates a consumer in a consumer group."
                         :all-args ("key" "group" "consumer")
                         :arity 5
                         :is-single-key-arg? true
                         :key-search {:start-idx 2
                                      :last-key-idx 0
                                      :step 1
                                      :limit 0}}
 :expire {:cmd :expire
          :summary "Sets the expiration time of a key in seconds."
          :all-args ("key" "seconds" "condition")
          :arity -3
          :is-single-key-arg? true
          :key-search {:start-idx 1
                       :last-key-idx 0
                       :step 1
                       :limit 0}}
 :srandmember {:cmd :srandmember
               :summary "Get one or multiple random members from a set"
               :all-args ("key" "count")
               :arity -2
               :is-single-key-arg? true
               :key-search {:start-idx 1
                            :last-key-idx 0
                            :step 1
                            :limit 0}}
 :rename {:cmd :rename
          :summary "Renames a key and overwrites the destination."
          :all-args ("key" "newkey")
          :arity 3
          :is-single-key-arg? true
          :key-search {:start-idx 1
                       :last-key-idx 0
                       :step 1
                       :limit 0}}
 :xgroup-destroy {:cmd :xgroup-destroy
                  :summary "Destroys a consumer group."
                  :all-args ("key" "group")
                  :arity 4
                  :is-single-key-arg? true
                  :key-search {:start-idx 2
                               :last-key-idx 0
                               :step 1
                               :limit 0}}
 :georadiusbymember {:cmd :georadiusbymember
                     :summary "Queries a geospatial index for members within a distance from a member
 optionally stores the result."
                     :all-args ("key" "member" "radius" "unit" "withcoord" "withdist" "withhash" "count-block" "order" "store")
                     :arity -5
                     :is-single-key-arg? true
                     :key-search {:start-idx 1
                                  :last-key-idx 0
                                  :step 1
                                  :limit 0}}
 :xinfo-groups {:cmd :xinfo-groups
                :summary "Returns a list of the consumer groups of a stream."
                :all-args ("key")
                :arity 3
                :is-single-key-arg? true
                :key-search {:start-idx 2
                             :last-key-idx 0
                             :step 1
                             :limit 0}}
 :lcs {:cmd :lcs
       :summary "Finds the longest common substring."
       :all-args ("key1" "key2" "len" "idx" "min-match-len" "withmatchlen")
       :arity -3
       :is-single-key-arg? true
       :key-search {:start-idx 1
                    :last-key-idx 1
                    :step 1
                    :limit 0}}
 :pfadd {:cmd :pfadd
         :summary "Adds elements to a HyperLogLog key. Creates the key if it doesn't exist."
         :all-args ("key" "element")
         :arity -2
         :is-single-key-arg? true
         :key-search {:start-idx 1
                      :last-key-idx 0
                      :step 1
                      :limit 0}}
 :object-refcount {:cmd :object-refcount
                   :summary "Returns the reference count of a value of a key."
                   :all-args ("key")
                   :arity 3
                   :is-single-key-arg? true
                   :key-search {:start-idx 2
                                :last-key-idx 0
                                :step 1
                                :limit 0}}
 :smembers {:cmd :smembers
            :summary "Returns all members of a set."
            :all-args ("key")
            :arity 2
            :is-single-key-arg? true
            :key-search {:start-idx 1
                         :last-key-idx 0
                         :step 1
                         :limit 0}}
 :bitpos {:cmd :bitpos
          :summary "Finds the first set (1) or clear (0) bit in a string."
          :all-args ("key" "bit" "range")
          :arity -3
          :is-single-key-arg? true
          :key-search {:start-idx 1
                       :last-key-idx 0
                       :step 1
                       :limit 0}}
 :hincrbyfloat {:cmd :hincrbyfloat
                :summary "Increments the floating point value of a field by a number. Uses 0 as initial value if the field doesn't exist."
                :all-args ("key" "field" "increment")
                :arity 4
                :is-single-key-arg? true
                :key-search {:start-idx 1
                             :last-key-idx 0
                             :step 1
                             :limit 0}}
 :bitop {:cmd :bitop
         :summary "Performs bitwise operations on multiple strings
 and stores the result."
         :all-args ("operation" "destkey" "key")
         :arity -4
         :is-single-key-arg? false
         :key-search {:start-idx 2
                      :last-key-idx 0
                      :step 1
                      :limit 0}}
 :xpending {:cmd :xpending
            :summary "Returns the information and entries from a stream consumer group's pending entries list."
            :all-args ("key" "group" "filters")
            :arity -3
            :is-single-key-arg? true
            :key-search {:start-idx 1
                         :last-key-idx 0
                         :step 1
                         :limit 0}}
 :sort_ro {:cmd :sort_ro
           :summary "Returns the sorted elements of a list
 a set
 or a sorted set."
           :all-args ("key" "by-pattern" "limit" "get-pattern" "order" "sorting")
           :arity -2
           :is-single-key-arg? true
           :key-search {:start-idx 1
                        :last-key-idx 0
                        :step 1
                        :limit 0}}
 :srem {:cmd :srem
        :summary "Removes one or more members from a set. Deletes the set if the last member was removed."
        :all-args ("key" "member")
        :arity -3
        :is-single-key-arg? true
        :key-search {:start-idx 1
                     :last-key-idx 0
                     :step 1
                     :limit 0}}
 :xadd {:cmd :xadd
        :summary "Appends a new message to a stream. Creates the key if it doesn't exist."
        :all-args ("key" "nomkstream" "trim" "id-selector" "data")
        :arity -5
        :is-single-key-arg? true
        :key-search {:start-idx 1
                     :last-key-idx 0
                     :step 1
                     :limit 0}}
 :object-encoding {:cmd :object-encoding
                   :summary "Returns the internal encoding of a Redis object."
                   :all-args ("key")
                   :arity 3
                   :is-single-key-arg? true
                   :key-search {:start-idx 2
                                :last-key-idx 0
                                :step 1
                                :limit 0}}
 :zremrangebylex {:cmd :zremrangebylex
                  :summary "Removes members in a sorted set within a lexicographical range. Deletes the sorted set if all members were removed."
                  :all-args ("key" "min" "max")
                  :arity 4
                  :is-single-key-arg? true
                  :key-search {:start-idx 1
                               :last-key-idx 0
                               :step 1
                               :limit 0}}
 :hkeys {:cmd :hkeys
         :summary "Returns all fields in a hash."
         :all-args ("key")
         :arity 2
         :is-single-key-arg? true
         :key-search {:start-idx 1
                      :last-key-idx 0
                      :step 1
                      :limit 0}}
 :evalsha_ro {:cmd :evalsha_ro
              :summary "Executes a read-only server-side Lua script by SHA1 digest."
              :all-args ("sha1" "numkeys" "key" "arg")
              :arity -3
              :is-single-key-arg? false
              :key-search {:start-idx 2
                           :last-key-idx nil
                           :step 1
                           :limit nil}}
 :zrandmember {:cmd :zrandmember
               :summary "Returns one or more random members from a sorted set."
               :all-args ("key" "options")
               :arity -2
               :is-single-key-arg? true
               :key-search {:start-idx 1
                            :last-key-idx 0
                            :step 1
                            :limit 0}}
 :xgroup-delconsumer {:cmd :xgroup-delconsumer
                      :summary "Deletes a consumer from a consumer group."
                      :all-args ("key" "group" "consumer")
                      :arity 5
                      :is-single-key-arg? true
                      :key-search {:start-idx 2
                                   :last-key-idx 0
                                   :step 1
                                   :limit 0}}
 :xrevrange {:cmd :xrevrange
             :summary "Returns the messages from a stream within a range of IDs in reverse order."
             :all-args ("key" "end" "start" "count")
             :arity -4
             :is-single-key-arg? true
             :key-search {:start-idx 1
                          :last-key-idx 0
                          :step 1
                          :limit 0}}
 :xinfo-stream {:cmd :xinfo-stream
                :summary "Returns information about a stream."
                :all-args ("key" "full-block")
                :arity -3
                :is-single-key-arg? true
                :key-search {:start-idx 2
                             :last-key-idx 0
                             :step 1
                             :limit 0}}
 :xclaim {:cmd :xclaim
          :summary "Changes
 or acquires
 ownership of a message in a consumer group
 as if the message was delivered a consumer group member."
          :all-args ("key" "group" "consumer" "min-idle-time" "id" "ms" "unix-time-milliseconds" "count" "force" "justid" "lastid")
          :arity -6
          :is-single-key-arg? true
          :key-search {:start-idx 1
                       :last-key-idx 0
                       :step 1
                       :limit 0}}
 :zlexcount {:cmd :zlexcount
             :summary "Returns the number of members in a sorted set within a lexicographical range."
             :all-args ("key" "min" "max")
             :arity 4
             :is-single-key-arg? true
             :key-search {:start-idx 1
                          :last-key-idx 0
                          :step 1
                          :limit 0}}
 :incrbyfloat {:cmd :incrbyfloat
               :summary "Increment the floating point value of a key by a number. Uses 0 as initial value if the key doesn't exist."
               :all-args ("key" "increment")
               :arity 3
               :is-single-key-arg? true
               :key-search {:start-idx 1
                            :last-key-idx 0
                            :step 1
                            :limit 0}}
 :rpush {:cmd :rpush
         :summary "Appends one or more elements to a list. Creates the key if it doesn't exist."
         :all-args ("key" "element")
         :arity -3
         :is-single-key-arg? true
         :key-search {:start-idx 1
                      :last-key-idx 0
                      :step 1
                      :limit 0}}
 :blmpop {:cmd :blmpop
          :summary "Pops the first element from one of multiple lists. Blocks until an element is available otherwise. Deletes the list if the last element was popped."
          :all-args ("timeout" "numkeys" "key" "where" "count")
          :arity -5
          :is-single-key-arg? false
          :key-search {:start-idx 2
                       :last-key-idx nil
                       :step 1
                       :limit nil}}
 :xreadgroup {:cmd :xreadgroup
              :summary "Returns new or historical messages from a stream for a consumer in a group. Blocks until a message is available otherwise."
              :all-args ("group-block" "count" "milliseconds" "noack" "streams")
              :arity -7
              :is-single-key-arg? false
              :key-search {:start-idx nil
                           :last-key-idx -1
                           :step 1
                           :limit 2}}
 :sinter {:cmd :sinter
          :summary "Returns the intersect of multiple sets."
          :all-args ("key")
          :arity -2
          :is-single-key-arg? false
          :key-search {:start-idx 1
                       :last-key-idx -1
                       :step 1
                       :limit 0}}
 :sunion {:cmd :sunion
          :summary "Returns the union of multiple sets."
          :all-args ("key")
          :arity -2
          :is-single-key-arg? false
          :key-search {:start-idx 1
                       :last-key-idx -1
                       :step 1
                       :limit 0}}
 :llen {:cmd :llen
        :summary "Returns the length of a list."
        :all-args ("key")
        :arity 2
        :is-single-key-arg? true
        :key-search {:start-idx 1
                     :last-key-idx 0
                     :step 1
                     :limit 0}}
 :pexpire {:cmd :pexpire
           :summary "Sets the expiration time of a key in milliseconds."
           :all-args ("key" "milliseconds" "condition")
           :arity -3
           :is-single-key-arg? true
           :key-search {:start-idx 1
                        :last-key-idx 0
                        :step 1
                        :limit 0}}
 :ttl {:cmd :ttl
       :summary "Returns the expiration time in seconds of a key."
       :all-args ("key")
       :arity 2
       :is-single-key-arg? true
       :key-search {:start-idx 1
                    :last-key-idx 0
                    :step 1
                    :limit 0}}
 :geosearch {:cmd :geosearch
             :summary "Queries a geospatial index for members inside an area of a box or a circle."
             :all-args ("key" "from" "by" "order" "count-block" "withcoord" "withdist" "withhash")
             :arity -7
             :is-single-key-arg? true
             :key-search {:start-idx 1
                          :last-key-idx 0
                          :step 1
                          :limit 0}}
 :xlen {:cmd :xlen
        :summary "Return the number of messages in a stream."
        :all-args ("key")
        :arity 2
        :is-single-key-arg? true
        :key-search {:start-idx 1
                     :last-key-idx 0
                     :step 1
                     :limit 0}}
 :hrandfield {:cmd :hrandfield
              :summary "Returns one or more random fields from a hash."
              :all-args ("key" "options")
              :arity -2
              :is-single-key-arg? true
              :key-search {:start-idx 1
                           :last-key-idx 0
                           :step 1
                           :limit 0}}
 :georadius {:cmd :georadius
             :summary "Queries a geospatial index for members within a distance from a coordinate
 optionally stores the result."
             :all-args ("key" "longitude" "latitude" "radius" "unit" "withcoord" "withdist" "withhash" "count-block" "order" "store")
             :arity -6
             :is-single-key-arg? true
             :key-search {:start-idx 1
                          :last-key-idx 0
                          :step 1
                          :limit 0}}
 :hsetnx {:cmd :hsetnx
          :summary "Sets the value of a field in a hash only when the field doesn't exist."
          :all-args ("key" "field" "value")
          :arity 4
          :is-single-key-arg? true
          :key-search {:start-idx 1
                       :last-key-idx 0
                       :step 1
                       :limit 0}}
 :sscan {:cmd :sscan
         :summary "Iterates over members of a set."
         :all-args ("key" "cursor" "pattern" "count")
         :arity -3
         :is-single-key-arg? true
         :key-search {:start-idx 1
                      :last-key-idx 0
                      :step 1
                      :limit 0}}
 :bzmpop {:cmd :bzmpop
          :summary "Removes and returns a member by score from one or more sorted sets. Blocks until a member is available otherwise. Deletes the sorted set if the last element was popped."
          :all-args ("timeout" "numkeys" "key" "where" "count")
          :arity -5
          :is-single-key-arg? false
          :key-search {:start-idx 2
                       :last-key-idx nil
                       :step 1
                       :limit nil}}
 :pexpireat {:cmd :pexpireat
             :summary "Sets the expiration time of a key to a Unix milliseconds timestamp."
             :all-args ("key" "unix-time-milliseconds" "condition")
             :arity -3
             :is-single-key-arg? true
             :key-search {:start-idx 1
                          :last-key-idx 0
                          :step 1
                          :limit 0}}
 :hlen {:cmd :hlen
        :summary "Returns the number of fields in a hash."
        :all-args ("key")
        :arity 2
        :is-single-key-arg? true
        :key-search {:start-idx 1
                     :last-key-idx 0
                     :step 1
                     :limit 0}}
 :zrevrangebylex {:cmd :zrevrangebylex
                  :summary "Returns members in a sorted set within a lexicographical range in reverse order."
                  :all-args ("key" "max" "min" "limit")
                  :arity -4
                  :is-single-key-arg? true
                  :key-search {:start-idx 1
                               :last-key-idx 0
                               :step 1
                               :limit 0}}
 :decrby {:cmd :decrby
          :summary "Decrements a number from the integer value of a key. Uses 0 as initial value if the key doesn't exist."
          :all-args ("key" "decrement")
          :arity 3
          :is-single-key-arg? true
          :key-search {:start-idx 1
                       :last-key-idx 0
                       :step 1
                       :limit 0}}
 :memory-usage {:cmd :memory-usage
                :summary "Estimates the memory usage of a key."
                :all-args ("key" "count")
                :arity -3
                :is-single-key-arg? true
                :key-search {:start-idx 2
                             :last-key-idx 0
                             :step 1
                             :limit 0}}
 :lmove {:cmd :lmove
         :summary "Returns an element after popping it from one list and pushing it to another. Deletes the list if the last element was moved."
         :all-args ("source" "destination" "wherefrom" "whereto")
         :arity 5
         :is-single-key-arg? true
         :key-search {:start-idx 1
                      :last-key-idx 0
                      :step 1
                      :limit 0}}
 :lpush {:cmd :lpush
         :summary "Prepends one or more elements to a list. Creates the key if it doesn't exist."
         :all-args ("key" "element")
         :arity -3
         :is-single-key-arg? true
         :key-search {:start-idx 1
                      :last-key-idx 0
                      :step 1
                      :limit 0}}
 :spublish {:cmd :spublish
            :summary "Post a message to a shard channel"
            :all-args ("shardchannel" "message")
            :arity 3
            :is-single-key-arg? false
            :key-search {:start-idx 1
                         :last-key-idx 0
                         :step 1
                         :limit 0}}
 :getrange {:cmd :getrange
            :summary "Returns a substring of the string stored at a key."
            :all-args ("key" "start" "end")
            :arity 4
            :is-single-key-arg? true
            :key-search {:start-idx 1
                         :last-key-idx 0
                         :step 1
                         :limit 0}}
 :msetnx {:cmd :msetnx
          :summary "Atomically modifies the string values of one or more keys only when all keys don't exist."
          :all-args ("data")
          :arity -3
          :is-single-key-arg? false
          :key-search {:start-idx 1
                       :last-key-idx -1
                       :step 2
                       :limit 0}}
 :restore-asking {:cmd :restore-asking
                  :summary "An internal command for migrating keys in a cluster."
                  :all-args ("key" "ttl" "serialized-value" "replace" "absttl" "seconds" "frequency")
                  :arity -4
                  :is-single-key-arg? true
                  :key-search {:start-idx 1
                               :last-key-idx 0
                               :step 1
                               :limit 0}}
 :georadiusbymember_ro {:cmd :georadiusbymember_ro
                        :summary "Returns members from a geospatial index that are within a distance from a member."
                        :all-args ("key" "member" "radius" "unit" "withcoord" "withdist" "withhash" "count-block" "order")
                        :arity -5
                        :is-single-key-arg? true
                        :key-search {:start-idx 1
                                     :last-key-idx 0
                                     :step 1
                                     :limit 0}}
 :blpop {:cmd :blpop
         :summary "Removes and returns the first element in a list. Blocks until an element is available otherwise. Deletes the list if the last element was popped."
         :all-args ("key" "timeout")
         :arity -3
         :is-single-key-arg? false
         :key-search {:start-idx 1
                      :last-key-idx -2
                      :step 1
                      :limit 0}}
 :lpop {:cmd :lpop
        :summary "Returns the first elements in a list after removing it. Deletes the list if the last element was popped."
        :all-args ("key" "count")
        :arity -2
        :is-single-key-arg? true
        :key-search {:start-idx 1
                     :last-key-idx 0
                     :step 1
                     :limit 0}}
 :zpopmax {:cmd :zpopmax
           :summary "Returns the highest-scoring members from a sorted set after removing them. Deletes the sorted set if the last member was popped."
           :all-args ("key" "count")
           :arity -2
           :is-single-key-arg? true
           :key-search {:start-idx 1
                        :last-key-idx 0
                        :step 1
                        :limit 0}}
 :touch {:cmd :touch
         :summary "Returns the number of existing keys out of those specified after updating the time they were last accessed."
         :all-args ("key")
         :arity -2
         :is-single-key-arg? false
         :key-search {:start-idx 1
                      :last-key-idx -1
                      :step 1
                      :limit 0}}
 :zdiffstore {:cmd :zdiffstore
              :summary "Stores the difference of multiple sorted sets in a key."
              :all-args ("destination" "numkeys" "key")
              :arity -4
              :is-single-key-arg? true
              :key-search {:start-idx 1
                           :last-key-idx 0
                           :step 1
                           :limit 0}}
 :watch {:cmd :watch
         :summary "Monitors changes to keys to determine the execution of a transaction."
         :all-args ("key")
         :arity -2
         :is-single-key-arg? false
         :key-search {:start-idx 1
                      :last-key-idx -1
                      :step 1
                      :limit 0}}
 :smove {:cmd :smove
         :summary "Moves a member from one set to another."
         :all-args ("source" "destination" "member")
         :arity 4
         :is-single-key-arg? true
         :key-search {:start-idx 1
                      :last-key-idx 0
                      :step 1
                      :limit 0}}
 :zrevrange {:cmd :zrevrange
             :summary "Returns members in a sorted set within a range of indexes in reverse order."
             :all-args ("key" "start" "stop" "withscores")
             :arity -4
             :is-single-key-arg? true
             :key-search {:start-idx 1
                          :last-key-idx 0
                          :step 1
                          :limit 0}}
 :sdiffstore {:cmd :sdiffstore
              :summary "Stores the difference of multiple sets in a key."
              :all-args ("destination" "key")
              :arity -3
              :is-single-key-arg? true
              :key-search {:start-idx 1
                           :last-key-idx 0
                           :step 1
                           :limit 0}}
 :zinter {:cmd :zinter
          :summary "Returns the intersect of multiple sorted sets."
          :all-args ("numkeys" "key" "weight" "aggregate" "withscores")
          :arity -3
          :is-single-key-arg? false
          :key-search {:start-idx 1
                       :last-key-idx nil
                       :step 1
                       :limit nil}}
 :zrangebyscore {:cmd :zrangebyscore
                 :summary "Returns members in a sorted set within a range of scores."
                 :all-args ("key" "min" "max" "withscores" "limit")
                 :arity -4
                 :is-single-key-arg? true
                 :key-search {:start-idx 1
                              :last-key-idx 0
                              :step 1
                              :limit 0}}
 :evalsha {:cmd :evalsha
           :summary "Executes a server-side Lua script by SHA1 digest."
           :all-args ("sha1" "numkeys" "key" "arg")
           :arity -3
           :is-single-key-arg? false
           :key-search {:start-idx 2
                        :last-key-idx nil
                        :step 1
                        :limit nil}}
 :brpop {:cmd :brpop
         :summary "Removes and returns the last element in a list. Blocks until an element is available otherwise. Deletes the list if the last element was popped."
         :all-args ("key" "timeout")
         :arity -3
         :is-single-key-arg? false
         :key-search {:start-idx 1
                      :last-key-idx -2
                      :step 1
                      :limit 0}}
 :sdiff {:cmd :sdiff
         :summary "Returns the difference of multiple sets."
         :all-args ("key")
         :arity -2
         :is-single-key-arg? false
         :key-search {:start-idx 1
                      :last-key-idx -1
                      :step 1
                      :limit 0}}
 :hstrlen {:cmd :hstrlen
           :summary "Returns the length of the value of a field."
           :all-args ("key" "field")
           :arity 3
           :is-single-key-arg? true
           :key-search {:start-idx 1
                        :last-key-idx 0
                        :step 1
                        :limit 0}}
 :zrevrangebyscore {:cmd :zrevrangebyscore
                    :summary "Returns members in a sorted set within a range of scores in reverse order."
                    :all-args ("key" "max" "min" "withscores" "limit")
                    :arity -4
                    :is-single-key-arg? true
                    :key-search {:start-idx 1
                                 :last-key-idx 0
                                 :step 1
                                 :limit 0}}
 :lrem {:cmd :lrem
        :summary "Removes elements from a list. Deletes the list if the last element was removed."
        :all-args ("key" "count" "element")
        :arity 4
        :is-single-key-arg? true
        :key-search {:start-idx 1
                     :last-key-idx 0
                     :step 1
                     :limit 0}}
 :setbit {:cmd :setbit
          :summary "Sets or clears the bit at offset of the string value. Creates the key if it doesn't exist."
          :all-args ("key" "offset" "value")
          :arity 4
          :is-single-key-arg? true
          :key-search {:start-idx 1
                       :last-key-idx 0
                       :step 1
                       :limit 0}}
 :ssubscribe {:cmd :ssubscribe
              :summary "Listens for messages published to shard channels."
              :all-args ("shardchannel")
              :arity -2
              :is-single-key-arg? false
              :key-search {:start-idx 1
                           :last-key-idx -1
                           :step 1
                           :limit 0}}
 :spop {:cmd :spop
        :summary "Returns one or more random members from a set after removing them. Deletes the set if the last member was popped."
        :all-args ("key" "count")
        :arity -2
        :is-single-key-arg? true
        :key-search {:start-idx 1
                     :last-key-idx 0
                     :step 1
                     :limit 0}}
 :zunion {:cmd :zunion
          :summary "Returns the union of multiple sorted sets."
          :all-args ("numkeys" "key" "weight" "aggregate" "withscores")
          :arity -3
          :is-single-key-arg? false
          :key-search {:start-idx 1
                       :last-key-idx nil
                       :step 1
                       :limit nil}}
 :incrby {:cmd :incrby
          :summary "Increments the integer value of a key by a number. Uses 0 as initial value if the key doesn't exist."
          :all-args ("key" "increment")
          :arity 3
          :is-single-key-arg? true
          :key-search {:start-idx 1
                       :last-key-idx 0
                       :step 1
                       :limit 0}}
 :zmscore {:cmd :zmscore
           :summary "Returns the score of one or more members in a sorted set."
           :all-args ("key" "member")
           :arity -3
           :is-single-key-arg? true
           :key-search {:start-idx 1
                        :last-key-idx 0
                        :step 1
                        :limit 0}}
 :rpop {:cmd :rpop
        :summary "Returns and removes the last elements of a list. Deletes the list if the last element was popped."
        :all-args ("key" "count")
        :arity -2
        :is-single-key-arg? true
        :key-search {:start-idx 1
                     :last-key-idx 0
                     :step 1
                     :limit 0}}
 :zrangestore {:cmd :zrangestore
               :summary "Stores a range of members from sorted set in a key."
               :all-args ("dst" "src" "min" "max" "sortby" "rev" "limit")
               :arity -5
               :is-single-key-arg? true
               :key-search {:start-idx 1
                            :last-key-idx 0
                            :step 1
                            :limit 0}}
 :zrange {:cmd :zrange
          :summary "Returns members in a sorted set within a range of indexes."
          :all-args ("key" "start" "stop" "sortby" "rev" "limit" "withscores")
          :arity -4
          :is-single-key-arg? true
          :key-search {:start-idx 1
                       :last-key-idx 0
                       :step 1
                       :limit 0}}
 :zremrangebyscore {:cmd :zremrangebyscore
                    :summary "Removes members in a sorted set within a range of scores. Deletes the sorted set if all members were removed."
                    :all-args ("key" "min" "max")
                    :arity 4
                    :is-single-key-arg? true
                    :key-search {:start-idx 1
                                 :last-key-idx 0
                                 :step 1
                                 :limit 0}}
 :mset {:cmd :mset
        :summary "Atomically creates or modifies the string values of one or more keys."
        :all-args ("data")
        :arity -3
        :is-single-key-arg? false
        :key-search {:start-idx 1
                     :last-key-idx -1
                     :step 2
                     :limit 0}}
 :bitfield {:cmd :bitfield
            :summary "Performs arbitrary bitfield integer operations on strings."
            :all-args ("key" "operation")
            :arity -2
            :is-single-key-arg? true
            :key-search {:start-idx 1
                         :last-key-idx 0
                         :step 1
                         :limit 0}}
 :rpoplpush {:cmd :rpoplpush
             :summary "Returns the last element of a list after removing and pushing it to another list. Deletes the list if the last element was popped."
             :all-args ("source" "destination")
             :arity 3
             :is-single-key-arg? true
             :key-search {:start-idx 1
                          :last-key-idx 0
                          :step 1
                          :limit 0}}
 :setex {:cmd :setex
         :summary "Sets the string value and expiration time of a key. Creates the key if it doesn't exist."
         :all-args ("key" "seconds" "value")
         :arity 4
         :is-single-key-arg? true
         :key-search {:start-idx 1
                      :last-key-idx 0
                      :step 1
                      :limit 0}}
 :set {:cmd :set
       :summary "Sets the string value of a key
 ignoring its type. The key is created if it doesn't exist."
       :all-args ("key" "value" "condition" "get" "expiration")
       :arity -3
       :is-single-key-arg? true
       :key-search {:start-idx 1
                    :last-key-idx 0
                    :step 1
                    :limit 0}}
 :zscore {:cmd :zscore
          :summary "Returns the score of a member in a sorted set."
          :all-args ("key" "member")
          :arity 3
          :is-single-key-arg? true
          :key-search {:start-idx 1
                       :last-key-idx 0
                       :step 1
                       :limit 0}}
 :xrange {:cmd :xrange
          :summary "Returns the messages from a stream within a range of IDs."
          :all-args ("key" "start" "end" "count")
          :arity -4
          :is-single-key-arg? true
          :key-search {:start-idx 1
                       :last-key-idx 0
                       :step 1
                       :limit 0}}
 :brpoplpush {:cmd :brpoplpush
              :summary "Pops an element from a list
 pushes it to another list and returns it. Block until an element is available otherwise. Deletes the list if the last element was popped."
              :all-args ("source" "destination" "timeout")
              :arity 4
              :is-single-key-arg? true
              :key-search {:start-idx 1
                           :last-key-idx 0
                           :step 1
                           :limit 0}}
 :pfdebug {:cmd :pfdebug
           :summary "Internal commands for debugging HyperLogLog values."
           :all-args ("subcommand" "key")
           :arity 3
           :is-single-key-arg? false
           :key-search {:start-idx 2
                        :last-key-idx 0
                        :step 1
                        :limit 0}}
 :xtrim {:cmd :xtrim
         :summary "Deletes messages from the beginning of a stream."
         :all-args ("key" "trim")
         :arity -4
         :is-single-key-arg? true
         :key-search {:start-idx 1
                      :last-key-idx 0
                      :step 1
                      :limit 0}}
 :zmpop {:cmd :zmpop
         :summary "Returns the highest- or lowest-scoring members from one or more sorted sets after removing them. Deletes the sorted set if the last member was popped."
         :all-args ("numkeys" "key" "where" "count")
         :arity -4
         :is-single-key-arg? false
         :key-search {:start-idx 1
                      :last-key-idx nil
                      :step 1
                      :limit nil}}
 :dump {:cmd :dump
        :summary "Returns a serialized representation of the value stored at a key."
        :all-args ("key")
        :arity 2
        :is-single-key-arg? true
        :key-search {:start-idx 1
                     :last-key-idx 0
                     :step 1
                     :limit 0}}
 :xack {:cmd :xack
        :summary "Returns the number of messages that were successfully acknowledged by the consumer group member of a stream."
        :all-args ("key" "group" "id")
        :arity -4
        :is-single-key-arg? true
        :key-search {:start-idx 1
                     :last-key-idx 0
                     :step 1
                     :limit 0}}
 :bzpopmax {:cmd :bzpopmax
            :summary "Removes and returns the member with the highest score from one or more sorted sets. Blocks until a member available otherwise.  Deletes the sorted set if the last element was popped."
            :all-args ("key" "timeout")
            :arity -3
            :is-single-key-arg? false
            :key-search {:start-idx 1
                         :last-key-idx -2
                         :step 1
                         :limit 0}}
 :hmset {:cmd :hmset
         :summary "Sets the values of multiple fields."
         :all-args ("key" "data")
         :arity -4
         :is-single-key-arg? true
         :key-search {:start-idx 1
                      :last-key-idx 0
                      :step 1
                      :limit 0}}
 :hgetall {:cmd :hgetall
           :summary "Returns all fields and values in a hash."
           :all-args ("key")
           :arity 2
           :is-single-key-arg? true
           :key-search {:start-idx 1
                        :last-key-idx 0
                        :step 1
                        :limit 0}}
 :getbit {:cmd :getbit
          :summary "Returns a bit value by offset."
          :all-args ("key" "offset")
          :arity 3
          :is-single-key-arg? true
          :key-search {:start-idx 1
                       :last-key-idx 0
                       :step 1
                       :limit 0}}
 :unlink {:cmd :unlink
          :summary "Asynchronously deletes one or more keys."
          :all-args ("key")
          :arity -2
          :is-single-key-arg? false
          :key-search {:start-idx 1
                       :last-key-idx -1
                       :step 1
                       :limit 0}}
 :hdel {:cmd :hdel
        :summary "Deletes one or more fields and their values from a hash. Deletes the hash if no fields remain."
        :all-args ("key" "field")
        :arity -3
        :is-single-key-arg? true
        :key-search {:start-idx 1
                     :last-key-idx 0
                     :step 1
                     :limit 0}}
 :pexpiretime {:cmd :pexpiretime
               :summary "Returns the expiration time of a key as a Unix milliseconds timestamp."
               :all-args ("key")
               :arity 2
               :is-single-key-arg? true
               :key-search {:start-idx 1
                            :last-key-idx 0
                            :step 1
                            :limit 0}}
 :decr {:cmd :decr
        :summary "Decrements the integer value of a key by one. Uses 0 as initial value if the key doesn't exist."
        :all-args ("key")
        :arity 2
        :is-single-key-arg? true
        :key-search {:start-idx 1
                     :last-key-idx 0
                     :step 1
                     :limit 0}}
 :sort {:cmd :sort
        :summary "Sorts the elements in a list
 a set
 or a sorted set
 optionally storing the result."
        :all-args ("key" "by-pattern" "limit" "get-pattern" "order" "sorting" "destination")
        :arity -2
        :is-single-key-arg? true
        :key-search {:start-idx 1
                     :last-key-idx 0
                     :step 1
                     :limit 0}}
 :object-freq {:cmd :object-freq
               :summary "Returns the logarithmic access frequency counter of a Redis object."
               :all-args ("key")
               :arity 3
               :is-single-key-arg? true
               :key-search {:start-idx 2
                            :last-key-idx 0
                            :step 1
                            :limit 0}}
 :zinterstore {:cmd :zinterstore
               :summary "Stores the intersect of multiple sorted sets in a key."
               :all-args ("destination" "numkeys" "key" "weight" "aggregate")
               :arity -4
               :is-single-key-arg? true
               :key-search {:start-idx 1
                            :last-key-idx 0
                            :step 1
                            :limit 0}}
 :getdel {:cmd :getdel
          :summary "Returns the string value of a key after deleting the key."
          :all-args ("key")
          :arity 2
          :is-single-key-arg? true
          :key-search {:start-idx 1
                       :last-key-idx 0
                       :step 1
                       :limit 0}}
 :xread {:cmd :xread
         :summary "Returns messages from multiple streams with IDs greater than the ones requested. Blocks until a message is available otherwise."
         :all-args ("count" "milliseconds" "streams")
         :arity -4
         :is-single-key-arg? false
         :key-search {:start-idx nil
                      :last-key-idx -1
                      :step 1
                      :limit 2}}
 :psetex {:cmd :psetex
          :summary "Sets both string value and expiration time in milliseconds of a key. The key is created if it doesn't exist."
          :all-args ("key" "milliseconds" "value")
          :arity 4
          :is-single-key-arg? true
          :key-search {:start-idx 1
                       :last-key-idx 0
                       :step 1
                       :limit 0}}
 :fcall {:cmd :fcall
         :summary "Invokes a function."
         :all-args ("function" "numkeys" "key" "arg")
         :arity -3
         :is-single-key-arg? false
         :key-search {:start-idx 2
                      :last-key-idx nil
                      :step 1
                      :limit nil}}
 :pfmerge {:cmd :pfmerge
           :summary "Merges one or more HyperLogLog values into a single key."
           :all-args ("destkey" "sourcekey")
           :arity -2
           :is-single-key-arg? true
           :key-search {:start-idx 1
                        :last-key-idx 0
                        :step 1
                        :limit 0}}
 :eval {:cmd :eval
        :summary "Executes a server-side Lua script."
        :all-args ("script" "numkeys" "key" "arg")
        :arity -3
        :is-single-key-arg? false
        :key-search {:start-idx 2
                     :last-key-idx nil
                     :step 1
                     :limit nil}}}
